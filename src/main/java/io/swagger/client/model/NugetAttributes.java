/*
 * Nexus Repository Manager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.63.0-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NugetAttributes
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-12-11T23:01:25.243+08:00")
public class NugetAttributes {
  @SerializedName("queryCacheItemMaxAge")
  private Integer queryCacheItemMaxAge = null;

  /**
   * Nuget protocol version
   */
  @JsonAdapter(NugetVersionEnum.Adapter.class)
  public enum NugetVersionEnum {
    V2("V2"),
    
    V3("V3");

    private String value;

    NugetVersionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NugetVersionEnum fromValue(String text) {
      for (NugetVersionEnum b : NugetVersionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<NugetVersionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NugetVersionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NugetVersionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return NugetVersionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("nugetVersion")
  private NugetVersionEnum nugetVersion = null;

  public NugetAttributes queryCacheItemMaxAge(Integer queryCacheItemMaxAge) {
    this.queryCacheItemMaxAge = queryCacheItemMaxAge;
    return this;
  }

   /**
   * How long to cache query results from the proxied repository (in seconds)
   * @return queryCacheItemMaxAge
  **/
  @ApiModelProperty(example = "3600", value = "How long to cache query results from the proxied repository (in seconds)")
  public Integer getQueryCacheItemMaxAge() {
    return queryCacheItemMaxAge;
  }

  public void setQueryCacheItemMaxAge(Integer queryCacheItemMaxAge) {
    this.queryCacheItemMaxAge = queryCacheItemMaxAge;
  }

  public NugetAttributes nugetVersion(NugetVersionEnum nugetVersion) {
    this.nugetVersion = nugetVersion;
    return this;
  }

   /**
   * Nuget protocol version
   * @return nugetVersion
  **/
  @ApiModelProperty(example = "V3", value = "Nuget protocol version")
  public NugetVersionEnum getNugetVersion() {
    return nugetVersion;
  }

  public void setNugetVersion(NugetVersionEnum nugetVersion) {
    this.nugetVersion = nugetVersion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NugetAttributes nugetAttributes = (NugetAttributes) o;
    return Objects.equals(this.queryCacheItemMaxAge, nugetAttributes.queryCacheItemMaxAge) &&
        Objects.equals(this.nugetVersion, nugetAttributes.nugetVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(queryCacheItemMaxAge, nugetVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NugetAttributes {\n");
    
    sb.append("    queryCacheItemMaxAge: ").append(toIndentedString(queryCacheItemMaxAge)).append("\n");
    sb.append("    nugetVersion: ").append(toIndentedString(nugetVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

