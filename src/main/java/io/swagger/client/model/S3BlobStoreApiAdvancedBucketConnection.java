/*
 * Nexus Repository Manager REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.63.0-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * S3BlobStoreApiAdvancedBucketConnection
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-12-11T23:01:25.243+08:00")
public class S3BlobStoreApiAdvancedBucketConnection {
  @SerializedName("endpoint")
  private String endpoint = null;

  @SerializedName("signerType")
  private String signerType = null;

  @SerializedName("forcePathStyle")
  private Boolean forcePathStyle = null;

  @SerializedName("maxConnectionPoolSize")
  private Integer maxConnectionPoolSize = null;

  public S3BlobStoreApiAdvancedBucketConnection endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

   /**
   * A custom endpoint URL for third party object stores using the S3 API.
   * @return endpoint
  **/
  @ApiModelProperty(value = "A custom endpoint URL for third party object stores using the S3 API.")
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  public S3BlobStoreApiAdvancedBucketConnection signerType(String signerType) {
    this.signerType = signerType;
    return this;
  }

   /**
   * An API signature version which may be required for third party object stores using the S3 API.
   * @return signerType
  **/
  @ApiModelProperty(value = "An API signature version which may be required for third party object stores using the S3 API.")
  public String getSignerType() {
    return signerType;
  }

  public void setSignerType(String signerType) {
    this.signerType = signerType;
  }

  public S3BlobStoreApiAdvancedBucketConnection forcePathStyle(Boolean forcePathStyle) {
    this.forcePathStyle = forcePathStyle;
    return this;
  }

   /**
   * Setting this flag will result in path-style access being used for all requests.
   * @return forcePathStyle
  **/
  @ApiModelProperty(value = "Setting this flag will result in path-style access being used for all requests.")
  public Boolean isForcePathStyle() {
    return forcePathStyle;
  }

  public void setForcePathStyle(Boolean forcePathStyle) {
    this.forcePathStyle = forcePathStyle;
  }

  public S3BlobStoreApiAdvancedBucketConnection maxConnectionPoolSize(Integer maxConnectionPoolSize) {
    this.maxConnectionPoolSize = maxConnectionPoolSize;
    return this;
  }

   /**
   * Setting this value will override the default connection pool size of Nexus of the s3 client for this blobstore.
   * @return maxConnectionPoolSize
  **/
  @ApiModelProperty(value = "Setting this value will override the default connection pool size of Nexus of the s3 client for this blobstore.")
  public Integer getMaxConnectionPoolSize() {
    return maxConnectionPoolSize;
  }

  public void setMaxConnectionPoolSize(Integer maxConnectionPoolSize) {
    this.maxConnectionPoolSize = maxConnectionPoolSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    S3BlobStoreApiAdvancedBucketConnection s3BlobStoreApiAdvancedBucketConnection = (S3BlobStoreApiAdvancedBucketConnection) o;
    return Objects.equals(this.endpoint, s3BlobStoreApiAdvancedBucketConnection.endpoint) &&
        Objects.equals(this.signerType, s3BlobStoreApiAdvancedBucketConnection.signerType) &&
        Objects.equals(this.forcePathStyle, s3BlobStoreApiAdvancedBucketConnection.forcePathStyle) &&
        Objects.equals(this.maxConnectionPoolSize, s3BlobStoreApiAdvancedBucketConnection.maxConnectionPoolSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpoint, signerType, forcePathStyle, maxConnectionPoolSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class S3BlobStoreApiAdvancedBucketConnection {\n");
    
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    signerType: ").append(toIndentedString(signerType)).append("\n");
    sb.append("    forcePathStyle: ").append(toIndentedString(forcePathStyle)).append("\n");
    sb.append("    maxConnectionPoolSize: ").append(toIndentedString(maxConnectionPoolSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

